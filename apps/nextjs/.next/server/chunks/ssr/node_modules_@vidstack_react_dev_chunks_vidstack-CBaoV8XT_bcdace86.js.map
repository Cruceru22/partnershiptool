{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/andreicruceru/comment.video/node_modules/%40vidstack/react/dev/chunks/vidstack-CBaoV8XT.js"],"sourcesContent":["\"use client\"\n\nimport { listenEvent, effect, untrack, createScope, keysOf, onDispose, DOMEvent, peek } from './vidstack-D_bWd66h.js';\nimport { ListSymbol, TimeRange, RAFLoop } from './vidstack-DUlCophs.js';\nimport { getCastSessionMedia, getCastContext, getCastSession, hasActiveCastSession, listenCastContextEvent, getCastErrorMessage } from './vidstack-BM-FgV9W.js';\nimport 'react';\nimport '@floating-ui/dom';\n\nclass GoogleCastMediaInfoBuilder {\n  #info;\n  constructor(src) {\n    this.#info = new chrome.cast.media.MediaInfo(src.src, src.type);\n  }\n  build() {\n    return this.#info;\n  }\n  setStreamType(streamType) {\n    if (streamType.includes(\"live\")) {\n      this.#info.streamType = chrome.cast.media.StreamType.LIVE;\n    } else {\n      this.#info.streamType = chrome.cast.media.StreamType.BUFFERED;\n    }\n    return this;\n  }\n  setTracks(tracks) {\n    this.#info.tracks = tracks.map(this.#buildCastTrack);\n    return this;\n  }\n  setMetadata(title, poster) {\n    this.#info.metadata = new chrome.cast.media.GenericMediaMetadata();\n    this.#info.metadata.title = title;\n    this.#info.metadata.images = [{ url: poster }];\n    return this;\n  }\n  #buildCastTrack(track, trackId) {\n    const castTrack = new chrome.cast.media.Track(trackId, chrome.cast.media.TrackType.TEXT);\n    castTrack.name = track.label;\n    castTrack.trackContentId = track.src;\n    castTrack.trackContentType = \"text/vtt\";\n    castTrack.language = track.language;\n    castTrack.subtype = track.kind.toUpperCase();\n    return castTrack;\n  }\n}\n\nclass GoogleCastTracksManager {\n  #cast;\n  #ctx;\n  #onNewLocalTracks;\n  constructor(cast, ctx, onNewLocalTracks) {\n    this.#cast = cast;\n    this.#ctx = ctx;\n    this.#onNewLocalTracks = onNewLocalTracks;\n  }\n  setup() {\n    const syncRemoteActiveIds = this.syncRemoteActiveIds.bind(this);\n    listenEvent(this.#ctx.audioTracks, \"change\", syncRemoteActiveIds);\n    listenEvent(this.#ctx.textTracks, \"mode-change\", syncRemoteActiveIds);\n    effect(this.#syncLocalTracks.bind(this));\n  }\n  getLocalTextTracks() {\n    return this.#ctx.$state.textTracks().filter((track) => track.src && track.type === \"vtt\");\n  }\n  #getLocalAudioTracks() {\n    return this.#ctx.$state.audioTracks();\n  }\n  #getRemoteTracks(type) {\n    const tracks = this.#cast.mediaInfo?.tracks ?? [];\n    return type ? tracks.filter((track) => track.type === type) : tracks;\n  }\n  #getRemoteActiveIds() {\n    const activeIds = [], activeLocalAudioTrack = this.#getLocalAudioTracks().find((track) => track.selected), activeLocalTextTracks = this.getLocalTextTracks().filter((track) => track.mode === \"showing\");\n    if (activeLocalAudioTrack) {\n      const remoteAudioTracks = this.#getRemoteTracks(chrome.cast.media.TrackType.AUDIO), remoteAudioTrack = this.#findRemoteTrack(remoteAudioTracks, activeLocalAudioTrack);\n      if (remoteAudioTrack) activeIds.push(remoteAudioTrack.trackId);\n    }\n    if (activeLocalTextTracks?.length) {\n      const remoteTextTracks = this.#getRemoteTracks(chrome.cast.media.TrackType.TEXT);\n      if (remoteTextTracks.length) {\n        for (const localTrack of activeLocalTextTracks) {\n          const remoteTextTrack = this.#findRemoteTrack(remoteTextTracks, localTrack);\n          if (remoteTextTrack) activeIds.push(remoteTextTrack.trackId);\n        }\n      }\n    }\n    return activeIds;\n  }\n  #syncLocalTracks() {\n    const localTextTracks = this.getLocalTextTracks();\n    if (!this.#cast.isMediaLoaded) return;\n    const remoteTextTracks = this.#getRemoteTracks(chrome.cast.media.TrackType.TEXT);\n    for (const localTrack of localTextTracks) {\n      const hasRemoteTrack = this.#findRemoteTrack(remoteTextTracks, localTrack);\n      if (!hasRemoteTrack) {\n        untrack(() => this.#onNewLocalTracks?.());\n        break;\n      }\n    }\n  }\n  syncRemoteTracks(event) {\n    if (!this.#cast.isMediaLoaded) return;\n    const localAudioTracks = this.#getLocalAudioTracks(), localTextTracks = this.getLocalTextTracks(), remoteAudioTracks = this.#getRemoteTracks(chrome.cast.media.TrackType.AUDIO), remoteTextTracks = this.#getRemoteTracks(chrome.cast.media.TrackType.TEXT);\n    for (const remoteAudioTrack of remoteAudioTracks) {\n      const hasLocalTrack = this.#findLocalTrack(localAudioTracks, remoteAudioTrack);\n      if (hasLocalTrack) continue;\n      const localAudioTrack = {\n        id: remoteAudioTrack.trackId.toString(),\n        label: remoteAudioTrack.name,\n        language: remoteAudioTrack.language,\n        kind: remoteAudioTrack.subtype ?? \"main\",\n        selected: false\n      };\n      this.#ctx.audioTracks[ListSymbol.add](localAudioTrack, event);\n    }\n    for (const remoteTextTrack of remoteTextTracks) {\n      const hasLocalTrack = this.#findLocalTrack(localTextTracks, remoteTextTrack);\n      if (hasLocalTrack) continue;\n      const localTextTrack = {\n        id: remoteTextTrack.trackId.toString(),\n        src: remoteTextTrack.trackContentId,\n        label: remoteTextTrack.name,\n        language: remoteTextTrack.language,\n        kind: remoteTextTrack.subtype.toLowerCase()\n      };\n      this.#ctx.textTracks.add(localTextTrack, event);\n    }\n  }\n  syncRemoteActiveIds(event) {\n    if (!this.#cast.isMediaLoaded) return;\n    const activeIds = this.#getRemoteActiveIds(), editRequest = new chrome.cast.media.EditTracksInfoRequest(activeIds);\n    this.#editTracksInfo(editRequest).catch((error) => {\n      {\n        this.#ctx.logger?.errorGroup(\"[vidstack] failed to edit cast tracks info\").labelledLog(\"Edit Request\", editRequest).labelledLog(\"Error\", error).dispatch();\n      }\n    });\n  }\n  #editTracksInfo(request) {\n    const media = getCastSessionMedia();\n    return new Promise((resolve, reject) => media?.editTracksInfo(request, resolve, reject));\n  }\n  #findLocalTrack(localTracks, remoteTrack) {\n    return localTracks.find((localTrack) => this.#isMatch(localTrack, remoteTrack));\n  }\n  #findRemoteTrack(remoteTracks, localTrack) {\n    return remoteTracks.find((remoteTrack) => this.#isMatch(localTrack, remoteTrack));\n  }\n  // Note: we can't rely on id matching because they will differ between local/remote. A local\n  // track id might not even exist.\n  #isMatch(localTrack, remoteTrack) {\n    return remoteTrack.name === localTrack.label && remoteTrack.language === localTrack.language && remoteTrack.subtype.toLowerCase() === localTrack.kind.toLowerCase();\n  }\n}\n\nclass GoogleCastProvider {\n  $$PROVIDER_TYPE = \"GOOGLE_CAST\";\n  scope = createScope();\n  #player;\n  #ctx;\n  #tracks;\n  #currentSrc = null;\n  #state = \"disconnected\";\n  #currentTime = 0;\n  #played = 0;\n  #seekableRange = new TimeRange(0, 0);\n  #timeRAF = new RAFLoop(this.#onAnimationFrame.bind(this));\n  #playerEventHandlers;\n  #reloadInfo = null;\n  #isIdle = false;\n  constructor(player, ctx) {\n    this.#player = player;\n    this.#ctx = ctx;\n    this.#tracks = new GoogleCastTracksManager(player, ctx, this.#onNewLocalTracks.bind(this));\n  }\n  get type() {\n    return \"google-cast\";\n  }\n  get currentSrc() {\n    return this.#currentSrc;\n  }\n  /**\n   * The Google Cast remote player.\n   *\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/cast.framework.RemotePlayer}\n   */\n  get player() {\n    return this.#player;\n  }\n  /**\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/cast.framework.CastContext}\n   */\n  get cast() {\n    return getCastContext();\n  }\n  /**\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/cast.framework.CastSession}\n   */\n  get session() {\n    return getCastSession();\n  }\n  /**\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/chrome.cast.media.Media}\n   */\n  get media() {\n    return getCastSessionMedia();\n  }\n  /**\n   * Whether the current Google Cast session belongs to this provider.\n   */\n  get hasActiveSession() {\n    return hasActiveCastSession(this.#currentSrc);\n  }\n  setup() {\n    this.#attachCastContextEventListeners();\n    this.#attachCastPlayerEventListeners();\n    this.#tracks.setup();\n    this.#ctx.notify(\"provider-setup\", this);\n  }\n  #attachCastContextEventListeners() {\n    listenCastContextEvent(\n      cast.framework.CastContextEventType.CAST_STATE_CHANGED,\n      this.#onCastStateChange.bind(this)\n    );\n  }\n  #attachCastPlayerEventListeners() {\n    const Event2 = cast.framework.RemotePlayerEventType, handlers = {\n      [Event2.IS_CONNECTED_CHANGED]: this.#onCastStateChange,\n      [Event2.IS_MEDIA_LOADED_CHANGED]: this.#onMediaLoadedChange,\n      [Event2.CAN_CONTROL_VOLUME_CHANGED]: this.#onCanControlVolumeChange,\n      [Event2.CAN_SEEK_CHANGED]: this.#onCanSeekChange,\n      [Event2.DURATION_CHANGED]: this.#onDurationChange,\n      [Event2.IS_MUTED_CHANGED]: this.#onVolumeChange,\n      [Event2.VOLUME_LEVEL_CHANGED]: this.#onVolumeChange,\n      [Event2.IS_PAUSED_CHANGED]: this.#onPausedChange,\n      [Event2.LIVE_SEEKABLE_RANGE_CHANGED]: this.#onProgress,\n      [Event2.PLAYER_STATE_CHANGED]: this.#onPlayerStateChange\n    };\n    this.#playerEventHandlers = handlers;\n    const handler = this.#onRemotePlayerEvent.bind(this);\n    for (const type of keysOf(handlers)) {\n      this.#player.controller.addEventListener(type, handler);\n    }\n    onDispose(() => {\n      for (const type of keysOf(handlers)) {\n        this.#player.controller.removeEventListener(type, handler);\n      }\n    });\n  }\n  async play() {\n    if (!this.#player.isPaused && !this.#isIdle) return;\n    if (this.#isIdle) {\n      await this.#reload(false, 0);\n      return;\n    }\n    this.#player.controller?.playOrPause();\n  }\n  async pause() {\n    if (this.#player.isPaused) return;\n    this.#player.controller?.playOrPause();\n  }\n  getMediaStatus(request) {\n    return new Promise((resolve, reject) => {\n      this.media?.getStatus(request, resolve, reject);\n    });\n  }\n  setMuted(muted) {\n    const hasChanged = muted && !this.#player.isMuted || !muted && this.#player.isMuted;\n    if (hasChanged) this.#player.controller?.muteOrUnmute();\n  }\n  setCurrentTime(time) {\n    this.#player.currentTime = time;\n    this.#ctx.notify(\"seeking\", time);\n    this.#player.controller?.seek();\n  }\n  setVolume(volume) {\n    this.#player.volumeLevel = volume;\n    this.#player.controller?.setVolumeLevel();\n  }\n  async loadSource(src) {\n    if (this.#reloadInfo?.src !== src) this.#reloadInfo = null;\n    if (hasActiveCastSession(src)) {\n      this.#resumeSession();\n      this.#currentSrc = src;\n      return;\n    }\n    this.#ctx.notify(\"load-start\");\n    const loadRequest = this.#buildLoadRequest(src), errorCode = await this.session.loadMedia(loadRequest);\n    if (errorCode) {\n      this.#currentSrc = null;\n      this.#ctx.notify(\"error\", Error(getCastErrorMessage(errorCode)));\n      return;\n    }\n    this.#currentSrc = src;\n  }\n  destroy() {\n    this.#reset();\n    this.#endSession();\n  }\n  #reset() {\n    if (!this.#reloadInfo) {\n      this.#played = 0;\n      this.#seekableRange = new TimeRange(0, 0);\n    }\n    this.#timeRAF.stop();\n    this.#currentTime = 0;\n    this.#reloadInfo = null;\n  }\n  #resumeSession() {\n    const resumeSessionEvent = new DOMEvent(\"resume-session\", { detail: this.session });\n    this.#onMediaLoadedChange(resumeSessionEvent);\n    const { muted, volume, savedState } = this.#ctx.$state, localState = savedState();\n    this.setCurrentTime(Math.max(this.#player.currentTime, localState?.currentTime ?? 0));\n    this.setMuted(muted());\n    this.setVolume(volume());\n    if (localState?.paused === false) this.play();\n  }\n  #endSession() {\n    this.cast.endCurrentSession(true);\n    const { remotePlaybackLoader } = this.#ctx.$state;\n    remotePlaybackLoader.set(null);\n  }\n  #disconnectFromReceiver() {\n    const { savedState } = this.#ctx.$state;\n    savedState.set({\n      paused: this.#player.isPaused,\n      currentTime: this.#player.currentTime\n    });\n    this.#endSession();\n  }\n  #onAnimationFrame() {\n    this.#onCurrentTimeChange();\n  }\n  #onRemotePlayerEvent(event) {\n    this.#playerEventHandlers[event.type].call(this, event);\n  }\n  #onCastStateChange(data) {\n    const castState = this.cast.getCastState(), state = castState === cast.framework.CastState.CONNECTED ? \"connected\" : castState === cast.framework.CastState.CONNECTING ? \"connecting\" : \"disconnected\";\n    if (this.#state === state) return;\n    const detail = { type: \"google-cast\", state }, trigger = this.#createEvent(data);\n    this.#state = state;\n    this.#ctx.notify(\"remote-playback-change\", detail, trigger);\n    if (state === \"disconnected\") {\n      this.#disconnectFromReceiver();\n    }\n  }\n  #onMediaLoadedChange(event) {\n    const hasLoaded = !!this.#player.isMediaLoaded;\n    if (!hasLoaded) return;\n    const src = peek(this.#ctx.$state.source);\n    Promise.resolve().then(() => {\n      if (src !== peek(this.#ctx.$state.source) || !this.#player.isMediaLoaded) return;\n      this.#reset();\n      const duration = this.#player.duration;\n      this.#seekableRange = new TimeRange(0, duration);\n      const detail = {\n        provider: this,\n        duration,\n        buffered: new TimeRange(0, 0),\n        seekable: this.#getSeekableRange()\n      }, trigger = this.#createEvent(event);\n      this.#ctx.notify(\"loaded-metadata\", void 0, trigger);\n      this.#ctx.notify(\"loaded-data\", void 0, trigger);\n      this.#ctx.notify(\"can-play\", detail, trigger);\n      this.#onCanControlVolumeChange();\n      this.#onCanSeekChange(event);\n      const { volume, muted } = this.#ctx.$state;\n      this.setVolume(volume());\n      this.setMuted(muted());\n      this.#timeRAF.start();\n      this.#tracks.syncRemoteTracks(trigger);\n      this.#tracks.syncRemoteActiveIds(trigger);\n    });\n  }\n  #onCanControlVolumeChange() {\n    this.#ctx.$state.canSetVolume.set(this.#player.canControlVolume);\n  }\n  #onCanSeekChange(event) {\n    const trigger = this.#createEvent(event);\n    this.#ctx.notify(\"stream-type-change\", this.#getStreamType(), trigger);\n  }\n  #getStreamType() {\n    const streamType = this.#player.mediaInfo?.streamType;\n    return streamType === chrome.cast.media.StreamType.LIVE ? this.#player.canSeek ? \"live:dvr\" : \"live\" : \"on-demand\";\n  }\n  #onCurrentTimeChange() {\n    if (this.#reloadInfo) return;\n    const currentTime = this.#player.currentTime;\n    if (currentTime === this.#currentTime) return;\n    this.#ctx.notify(\"time-change\", currentTime);\n    if (currentTime > this.#played) {\n      this.#played = currentTime;\n      this.#onProgress();\n    }\n    if (this.#ctx.$state.seeking()) {\n      this.#ctx.notify(\"seeked\", currentTime);\n    }\n    this.#currentTime = currentTime;\n  }\n  #onDurationChange(event) {\n    if (!this.#player.isMediaLoaded || this.#reloadInfo) return;\n    const duration = this.#player.duration, trigger = this.#createEvent(event);\n    this.#seekableRange = new TimeRange(0, duration);\n    this.#ctx.notify(\"duration-change\", duration, trigger);\n  }\n  #onVolumeChange(event) {\n    if (!this.#player.isMediaLoaded) return;\n    const detail = {\n      muted: this.#player.isMuted,\n      volume: this.#player.volumeLevel\n    }, trigger = this.#createEvent(event);\n    this.#ctx.notify(\"volume-change\", detail, trigger);\n  }\n  #onPausedChange(event) {\n    const trigger = this.#createEvent(event);\n    if (this.#player.isPaused) {\n      this.#ctx.notify(\"pause\", void 0, trigger);\n    } else {\n      this.#ctx.notify(\"play\", void 0, trigger);\n    }\n  }\n  #onProgress(event) {\n    const detail = {\n      seekable: this.#getSeekableRange(),\n      buffered: new TimeRange(0, this.#played)\n    }, trigger = event ? this.#createEvent(event) : void 0;\n    this.#ctx.notify(\"progress\", detail, trigger);\n  }\n  #onPlayerStateChange(event) {\n    const state = this.#player.playerState, PlayerState = chrome.cast.media.PlayerState;\n    this.#isIdle = state === PlayerState.IDLE;\n    if (state === PlayerState.PAUSED) return;\n    const trigger = this.#createEvent(event);\n    switch (state) {\n      case PlayerState.PLAYING:\n        this.#ctx.notify(\"playing\", void 0, trigger);\n        break;\n      case PlayerState.BUFFERING:\n        this.#ctx.notify(\"waiting\", void 0, trigger);\n        break;\n      case PlayerState.IDLE:\n        this.#timeRAF.stop();\n        this.#ctx.notify(\"pause\");\n        this.#ctx.notify(\"end\");\n        break;\n    }\n  }\n  #getSeekableRange() {\n    return this.#player.liveSeekableRange ? new TimeRange(this.#player.liveSeekableRange.start, this.#player.liveSeekableRange.end) : this.#seekableRange;\n  }\n  #createEvent(detail) {\n    return detail instanceof Event ? detail : new DOMEvent(detail.type, { detail });\n  }\n  #buildMediaInfo(src) {\n    const { streamType, title, poster } = this.#ctx.$state;\n    return new GoogleCastMediaInfoBuilder(src).setMetadata(title(), poster()).setStreamType(streamType()).setTracks(this.#tracks.getLocalTextTracks()).build();\n  }\n  #buildLoadRequest(src) {\n    const mediaInfo = this.#buildMediaInfo(src), request = new chrome.cast.media.LoadRequest(mediaInfo), savedState = this.#ctx.$state.savedState();\n    request.autoplay = (this.#reloadInfo?.paused ?? savedState?.paused) === false;\n    request.currentTime = this.#reloadInfo?.time ?? savedState?.currentTime ?? 0;\n    return request;\n  }\n  async #reload(paused, time) {\n    const src = peek(this.#ctx.$state.source);\n    this.#reloadInfo = { src, paused, time };\n    await this.loadSource(src);\n  }\n  #onNewLocalTracks() {\n    this.#reload(this.#player.isPaused, this.#player.currentTime).catch((error) => {\n      {\n        this.#ctx.logger?.errorGroup(\"[vidstack] cast failed to load new local tracks\").labelledLog(\"Error\", error).dispatch();\n      }\n    });\n  }\n}\n\nexport { GoogleCastProvider };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}