{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/andreicruceru/comment.video/node_modules/media-captions/dist/dev/errors.js"],"sourcesContent":["import { P as ParseError, c as ParseErrorCode } from './index.js';\n\nconst ParseErrorBuilder = {\n  _badVTTHeader() {\n    return new ParseError({\n      code: ParseErrorCode.BadSignature,\n      reason: \"missing WEBVTT file header\",\n      line: 1\n    });\n  },\n  _badStartTimestamp(startTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue start timestamp \\`${startTime}\\` is invalid on line ${line}`,\n      line\n    });\n  },\n  _badEndTimestamp(endTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue end timestamp \\`${endTime}\\` is invalid on line ${line}`,\n      line\n    });\n  },\n  _badRangeTimestamp(startTime, endTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue end timestamp \\`${endTime}\\` is greater than start \\`${startTime}\\` on line ${line}`,\n      line\n    });\n  },\n  _badCueSetting(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadSettingValue,\n      reason: `invalid value for cue setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  _unknownCueSetting(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.UnknownSetting,\n      reason: `unknown cue setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  _badRegionSetting(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadSettingValue,\n      reason: `invalid value for region setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  _unknownRegionSetting(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.UnknownSetting,\n      reason: `unknown region setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  // SSA-specific errors\n  _missingFormat(type, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadFormat,\n      reason: `format missing for \\`${type}\\` block on line ${line}`,\n      line\n    });\n  }\n};\n\nexport { ParseErrorBuilder };\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB;IACxB;QACE,OAAO,IAAI,yJAAA,CAAA,IAAU,CAAC;YACpB,MAAM,yJAAA,CAAA,IAAc,CAAC,YAAY;YACjC,QAAQ;YACR,MAAM;QACR;IACF;IACA,oBAAmB,SAAS,EAAE,IAAI;QAChC,OAAO,IAAI,yJAAA,CAAA,IAAU,CAAC;YACpB,MAAM,yJAAA,CAAA,IAAc,CAAC,YAAY;YACjC,QAAQ,CAAC,sBAAsB,EAAE,UAAU,sBAAsB,EAAE,MAAM;YACzE;QACF;IACF;IACA,kBAAiB,OAAO,EAAE,IAAI;QAC5B,OAAO,IAAI,yJAAA,CAAA,IAAU,CAAC;YACpB,MAAM,yJAAA,CAAA,IAAc,CAAC,YAAY;YACjC,QAAQ,CAAC,oBAAoB,EAAE,QAAQ,sBAAsB,EAAE,MAAM;YACrE;QACF;IACF;IACA,oBAAmB,SAAS,EAAE,OAAO,EAAE,IAAI;QACzC,OAAO,IAAI,yJAAA,CAAA,IAAU,CAAC;YACpB,MAAM,yJAAA,CAAA,IAAc,CAAC,YAAY;YACjC,QAAQ,CAAC,oBAAoB,EAAE,QAAQ,2BAA2B,EAAE,UAAU,WAAW,EAAE,MAAM;YACjG;QACF;IACF;IACA,gBAAe,IAAI,EAAE,KAAK,EAAE,IAAI;QAC9B,OAAO,IAAI,yJAAA,CAAA,IAAU,CAAC;YACpB,MAAM,yJAAA,CAAA,IAAc,CAAC,eAAe;YACpC,QAAQ,CAAC,gCAAgC,EAAE,KAAK,WAAW,EAAE,KAAK,SAAS,EAAE,MAAM,CAAC,CAAC;YACrF;QACF;IACF;IACA,oBAAmB,IAAI,EAAE,KAAK,EAAE,IAAI;QAClC,OAAO,IAAI,yJAAA,CAAA,IAAU,CAAC;YACpB,MAAM,yJAAA,CAAA,IAAc,CAAC,cAAc;YACnC,QAAQ,CAAC,sBAAsB,EAAE,KAAK,WAAW,EAAE,KAAK,SAAS,EAAE,MAAM,CAAC,CAAC;YAC3E;QACF;IACF;IACA,mBAAkB,IAAI,EAAE,KAAK,EAAE,IAAI;QACjC,OAAO,IAAI,yJAAA,CAAA,IAAU,CAAC;YACpB,MAAM,yJAAA,CAAA,IAAc,CAAC,eAAe;YACpC,QAAQ,CAAC,mCAAmC,EAAE,KAAK,WAAW,EAAE,KAAK,SAAS,EAAE,MAAM,CAAC,CAAC;YACxF;QACF;IACF;IACA,uBAAsB,IAAI,EAAE,KAAK,EAAE,IAAI;QACrC,OAAO,IAAI,yJAAA,CAAA,IAAU,CAAC;YACpB,MAAM,yJAAA,CAAA,IAAc,CAAC,cAAc;YACnC,QAAQ,CAAC,yBAAyB,EAAE,KAAK,WAAW,EAAE,KAAK,SAAS,EAAE,MAAM,CAAC,CAAC;YAC9E;QACF;IACF;IACA,sBAAsB;IACtB,gBAAe,IAAI,EAAE,IAAI;QACvB,OAAO,IAAI,yJAAA,CAAA,IAAU,CAAC;YACpB,MAAM,yJAAA,CAAA,IAAc,CAAC,SAAS;YAC9B,QAAQ,CAAC,qBAAqB,EAAE,KAAK,iBAAiB,EAAE,MAAM;YAC9D;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}