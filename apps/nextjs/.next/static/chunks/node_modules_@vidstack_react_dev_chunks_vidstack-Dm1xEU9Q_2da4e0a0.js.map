{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/andreicruceru/comment.video/node_modules/%40vidstack/react/dev/chunks/vidstack-Dm1xEU9Q.js"],"sourcesContent":["\"use client\"\n\nconst videoIdRE = /(?:youtu\\.be|youtube|youtube\\.com|youtube-nocookie\\.com)(?:\\/shorts)?\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=|)((?:\\w|-){11})/;\nconst posterCache = /* @__PURE__ */ new Map();\nconst pendingFetch = /* @__PURE__ */ new Map();\nfunction resolveYouTubeVideoId(src) {\n  return src.match(videoIdRE)?.[1];\n}\nasync function findYouTubePoster(videoId, abort) {\n  if (posterCache.has(videoId)) return posterCache.get(videoId);\n  if (pendingFetch.has(videoId)) return pendingFetch.get(videoId);\n  const pending = new Promise(async (resolve) => {\n    const sizes = [\"maxresdefault\", \"sddefault\", \"hqdefault\"];\n    for (const size of sizes) {\n      for (const webp of [true, false]) {\n        const url = resolveYouTubePosterURL(videoId, size, webp), response = await fetch(url, {\n          mode: \"no-cors\",\n          signal: abort.signal\n        });\n        if (response.status < 400) {\n          posterCache.set(videoId, url);\n          resolve(url);\n          return;\n        }\n      }\n    }\n  }).catch(() => \"\").finally(() => pendingFetch.delete(videoId));\n  pendingFetch.set(videoId, pending);\n  return pending;\n}\nfunction resolveYouTubePosterURL(videoId, size, webp) {\n  const type = webp ? \"webp\" : \"jpg\";\n  return `https://i.ytimg.com/${webp ? \"vi_webp\" : \"vi\"}/${videoId}/${size}.${type}`;\n}\n\nexport { findYouTubePoster, resolveYouTubeVideoId };\n"],"names":[],"mappings":";;;;AAAA;AAEA,MAAM,YAAY;AAClB,MAAM,cAAc,aAAa,GAAG,IAAI;AACxC,MAAM,eAAe,aAAa,GAAG,IAAI;AACzC,SAAS,sBAAsB,GAAG;IAChC,OAAO,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;AAClC;AACA,eAAe,kBAAkB,OAAO,EAAE,KAAK;IAC7C,IAAI,YAAY,GAAG,CAAC,UAAU,OAAO,YAAY,GAAG,CAAC;IACrD,IAAI,aAAa,GAAG,CAAC,UAAU,OAAO,aAAa,GAAG,CAAC;IACvD,MAAM,UAAU,IAAI,QAAQ,OAAO;QACjC,MAAM,QAAQ;YAAC;YAAiB;YAAa;SAAY;QACzD,KAAK,MAAM,QAAQ,MAAO;YACxB,KAAK,MAAM,QAAQ;gBAAC;gBAAM;aAAM,CAAE;gBAChC,MAAM,MAAM,wBAAwB,SAAS,MAAM,OAAO,WAAW,MAAM,MAAM,KAAK;oBACpF,MAAM;oBACN,QAAQ,MAAM,MAAM;gBACtB;gBACA,IAAI,SAAS,MAAM,GAAG,KAAK;oBACzB,YAAY,GAAG,CAAC,SAAS;oBACzB,QAAQ;oBACR;gBACF;YACF;QACF;IACF,GAAG,KAAK,CAAC,IAAM,IAAI,OAAO,CAAC,IAAM,aAAa,MAAM,CAAC;IACrD,aAAa,GAAG,CAAC,SAAS;IAC1B,OAAO;AACT;AACA,SAAS,wBAAwB,OAAO,EAAE,IAAI,EAAE,IAAI;IAClD,MAAM,OAAO,OAAO,SAAS;IAC7B,OAAO,CAAC,oBAAoB,EAAE,OAAO,YAAY,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM;AACpF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}